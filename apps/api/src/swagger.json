{
  "openapi": "3.0.0",
  "paths": {
    "/api/users/get-user-by-id/{id}": {
      "get": {
        "operationId": "getUserById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User id",
            "schema": {
              "default": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/ResponseDto" },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/GetUserResponseData"
                        },
                        "status": {
                          "$ref": "#/components/schemas/HttpStatus",
                          "default": 200
                        }
                      }
                    }
                  ],
                  "title": "GetUserResponse"
                }
              }
            }
          }
        },
        "tags": ["Users"]
      }
    },
    "/api/users": {
      "post": {
        "operationId": "create",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUserDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/ResponseDto" },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CreateUserResponseData"
                        },
                        "status": {
                          "$ref": "#/components/schemas/HttpStatus",
                          "default": 201
                        }
                      }
                    }
                  ],
                  "title": "CreateUserResponse"
                }
              }
            }
          }
        },
        "tags": ["Users"]
      }
    },
    "/api/users/check-email/{email}": {
      "get": {
        "operationId": "checkEmail",
        "summary": "",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/ResponseDto" },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CheckEmailResponseData"
                        },
                        "status": {
                          "$ref": "#/components/schemas/HttpStatus",
                          "default": 200
                        }
                      }
                    }
                  ],
                  "title": "CheckEmailResponse"
                }
              }
            }
          }
        },
        "tags": ["Users"]
      }
    }
  },
  "info": { "title": "Bull API", "version": "0.0.0", "contact": {} },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "GetUserResponseData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User id",
            "default": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "name": {
            "type": "string",
            "example": "ArgoNick",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "example": "argonick@gmail.com",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "example": "strong_secret",
            "description": "User password"
          },
          "status": {
            "type": "boolean",
            "default": "false",
            "description": "User status"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-29 10:21:02.810132",
            "description": "User created date"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-29 10:21:02.810132",
            "description": "User updated date"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "password",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "ResponseError": {
        "type": "object",
        "properties": {
          "code": {
            "oneOf": [
              { "type": "string", "default": "ERROR_CODE" },
              { "type": "number" }
            ]
          },
          "message": { "type": "string", "default": "Error message" },
          "error": {
            "oneOf": [
              { "type": "string", "default": "Error reason" },
              { "type": "object" }
            ]
          }
        },
        "required": ["code", "message", "error"]
      },
      "HttpStatus": {
        "type": "number",
        "default": 200,
        "enum": [
          100, 101, 102, 103, 200, 201, 202, 203, 204, 205, 206, 300, 301, 302,
          303, 304, 307, 308, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
          410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 424, 428, 429,
          500, 501, 502, 503, 504, 505
        ]
      },
      "ResponseDto": {
        "type": "object",
        "properties": {
          "data": { "type": "object", "nullable": true },
          "error": {
            "nullable": true,
            "default": null,
            "allOf": [{ "$ref": "#/components/schemas/ResponseError" }]
          },
          "status": { "$ref": "#/components/schemas/HttpStatus" }
        },
        "required": ["data", "error", "status"]
      },
      "CreateUserResponseData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User id",
            "default": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "name": {
            "type": "string",
            "example": "ArgoNick",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "example": "argonick@gmail.com",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "example": "strong_secret",
            "description": "User password"
          },
          "status": {
            "type": "boolean",
            "default": "false",
            "description": "User status"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-29 10:21:02.810132",
            "description": "User created date"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-29 10:21:02.810132",
            "description": "User updated date"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "password",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "ArgoNick",
            "description": "User name"
          },
          "email": {
            "type": "string",
            "example": "argonick@gmail.com",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "example": "strong_secret",
            "description": "User password"
          }
        },
        "required": ["name", "email", "password"]
      },
      "CheckEmailResponseData": {
        "type": "object",
        "properties": {
          "exists": {
            "type": "boolean",
            "example": "false",
            "description": "Email exists"
          }
        },
        "required": ["exists"]
      }
    }
  }
}
